From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Thu, 29 Aug 2019 22:02:33 -0700
Subject: [PATCH] Print exceptions in critical areas

This patch contains code that prints exceptions instead of swallowing
them in areas we should not swallow them

diff --git a/src/main/java/net/minecraft/server/RegionFileCache.java b/src/main/java/net/minecraft/server/RegionFileCache.java
index d3d61074222d591820508b4c5c30af408025695e..d2aa98d530209c27ed4fc7b2bae073634c3c5a1b 100644
--- a/src/main/java/net/minecraft/server/RegionFileCache.java
+++ b/src/main/java/net/minecraft/server/RegionFileCache.java
@@ -184,13 +184,18 @@ public abstract class RegionFileCache implements AutoCloseable {
 
                 try {
                     oversizedData = regionfile.getOversizedData(chunkCoordinate.x, chunkCoordinate.z);
-                } catch (Exception ex) {}
+                    /* Concrete start - print exceptions in critical areas */
+                } catch (Exception ex) {
+                    MinecraftServer.LOGGER.error("Failed to read OVERSIZED chunk data for " + chunkCoordinate.toString() + " in regionfile " + regionfile.file.toString() + ", ignoring OVERSIZED data", ex);
+                }
+                /* Concrete end - print exceptions in critical areas */
 
                 NBTTagCompound chunk;
 
                 try {
                     chunk = NBTCompressedStreamTools.readNBT(datainputstream);
                 } catch (final Exception ex) {
+                    MinecraftServer.LOGGER.error("Failed to read chunk data for " + chunkCoordinate.toString() + " in regionfile " + regionfile.file.toString() + ", ignoring data", ex); /* Concrete - print exceptions in critical areas */
                     return null;
                 }
                 // Paper end
@@ -256,6 +261,7 @@ public abstract class RegionFileCache implements AutoCloseable {
                 try {
                     return NBTCompressedStreamTools.a(datainputstream);
                 } catch (Exception ex) {
+                    MinecraftServer.LOGGER.error("Failed to read chunk " + chunkcoordintpair.toString() + " in regionfile " + regionfile.file.toString() + ", ignoring data", ex); /* Concrete - print exceptions in critical areas */
                     return null;
                 }
                 // Paper end
-- 
2.22.1

