From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Mon, 2 Dec 2019 05:15:55 -0800
Subject: [PATCH] Optimise ActivationRange#activateEntities(World)

By using our Chunk#forEachEntity method, the time trimmed was
approximately 2-5x in my testing.

diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index 0e36fca47dc32b9fb747a7f42a2164fb3570eaa2..ca5bdb4f551f2ee49ab23949d3cb1074b8f0d5df 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -4,6 +4,7 @@ import java.util.Collection;
 import java.util.List;
 import net.minecraft.server.AxisAlignedBB;
 import net.minecraft.server.Chunk;
+import net.minecraft.server.ChunkProviderServer; /* Concrete */
 import net.minecraft.server.Entity;
 import net.minecraft.server.EntityAmbient;
 import net.minecraft.server.EntityAnimal;
@@ -125,6 +126,8 @@ public class ActivationRange
         maxRangeTemp = Math.max( maxRangeTemp, raiderActivationRange );
         maxRangeTemp = Math.max( maxRangeTemp, miscActivationRange );
 
+        ChunkProviderServer chunkProviderServer = (ChunkProviderServer)world.getChunkProvider();
+
         for ( EntityHuman player : world.getPlayers() )
         {
             final int maxRange = Math.min( ( ( player instanceof net.minecraft.server.EntityPlayer ? ((net.minecraft.server.EntityPlayer)player).getEffectiveViewDistance(((WorldServer)world).getChunkProvider().playerChunkMap) : world.spigotConfig.viewDistance ) << 4 ) - 8, maxRangeTemp );
@@ -145,7 +148,7 @@ public class ActivationRange
             {
                 for ( int j1 = k; j1 <= l; ++j1 )
                 {
-                    Chunk chunk = (Chunk) world.getChunkIfLoadedImmediately( i1, j1 );
+                    Chunk chunk = chunkProviderServer.getChunkAtIfLoadedMainThreadNoCache( i1, j1 ); /* Concrete */
                     if ( chunk != null )
                     {
                         activateChunkEntities( chunk );
@@ -163,24 +166,20 @@ public class ActivationRange
      */
     private static void activateChunkEntities(Chunk chunk)
     {
-        for ( List<Entity> slice : chunk.entitySlices )
-        {
-            for ( Entity entity : (Collection<Entity>) slice )
+        /* Concrete start - optimise this call */
+        ca.spottedleaf.concrete.util.EntityList entityList = chunk.entityList;
+        Entity[] rawData = entityList.getRawData();
+        for (int i = 0, len = entityList.size(); i < len; ++i) {
+            Entity entity = rawData[i];
+            if ( MinecraftServer.currentTick > entity.activatedTick )
             {
-                if ( MinecraftServer.currentTick > entity.activatedTick )
+                if ( entity.defaultActivationState || entity.activationType.boundingBox.intersects(entity.getBoundingBox())) /* Concrete - optimise this call */
                 {
-                    if ( entity.defaultActivationState )
-                    {
-                        entity.activatedTick = MinecraftServer.currentTick;
-                        continue;
-                    }
-                    if ( entity.activationType.boundingBox.c( entity.getBoundingBox() ) )
-                    {
-                        entity.activatedTick = MinecraftServer.currentTick;
-                    }
-                }
+                    entity.activatedTick = MinecraftServer.currentTick;
+                } /* Concrete - optimise this call */
             }
         }
+        /* Concrete end - optimise this call */
     }
 
     /**
-- 
2.24.0.windows.2

