From 63fc79c84bdfb90f1f897f406d9945c4189fc3a3 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Thu, 11 Apr 2019 14:39:35 -0700
Subject: [PATCH] Configurable buff fires

---
 .../concrete/config/ConcreteConfig.java       | 13 ++++++++++
 .../java/net/minecraft/server/BlockFire.java  | 24 +++++++++++++++----
 2 files changed, 32 insertions(+), 5 deletions(-)

diff --git a/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java b/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java
index d2942e46b..deedc73ea 100644
--- a/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java
+++ b/src/main/java/ca/spottedleaf/concrete/config/ConcreteConfig.java
@@ -1,6 +1,7 @@
 package ca.spottedleaf.concrete.config;
 
 import ca.spottedleaf.concurrentutil.util.Throw;
+import net.minecraft.server.BlockFire;
 import org.bukkit.Bukkit;
 import org.bukkit.configuration.ConfigurationSection;
 import org.bukkit.configuration.file.YamlConfiguration;
@@ -100,6 +101,18 @@ public final class ConcreteConfig {
         tickThreads = ConcreteConfig.getInt("server-tick-threads", 1); // will be 4 in the future
     }
 
+    /**
+     * Whether or not to buff fire to be actually unstoppable.
+     */
+    public static boolean buffFire;
+    public static boolean unstoppablefire;
+
+    private static void bufffire() {
+        buffFire = ConcreteConfig.getBoolean("buff-fire", false);
+        unstoppablefire = ConcreteConfig.getBoolean("unstoppable-fire", false);
+        BlockFire.configinit();
+    }
+
     public static final class WorldConnfig {
 
         public final String worldName;
diff --git a/src/main/java/net/minecraft/server/BlockFire.java b/src/main/java/net/minecraft/server/BlockFire.java
index 71357b73f..42f75c374 100644
--- a/src/main/java/net/minecraft/server/BlockFire.java
+++ b/src/main/java/net/minecraft/server/BlockFire.java
@@ -98,7 +98,7 @@ public class BlockFire extends Block {
 
     @Override
     public int a(IWorldReader iworldreader) {
-        return 30;
+        return (ca.spottedleaf.concrete.config.ConcreteConfig.buffFire ? (ca.spottedleaf.concrete.config.ConcreteConfig.unstoppablefire ? 1 : 15) : 30); /* Concrete - buff fire */
     }
 
     @Override
@@ -110,14 +110,14 @@ public class BlockFire extends Block {
 
             Block block = world.getType(blockposition.down()).getBlock();
             boolean flag = world.worldProvider instanceof WorldProviderTheEnd && block == Blocks.BEDROCK || block == Blocks.NETHERRACK || block == Blocks.MAGMA_BLOCK;
-            int i = (Integer) iblockdata.get(BlockFire.AGE);
+            int i = ca.spottedleaf.concrete.config.ConcreteConfig.buffFire ? 0 : (Integer) iblockdata.get(BlockFire.AGE); /* Concrete - buff fire */
 
             if (!flag && world.isRaining() && this.a(world, blockposition) && random.nextFloat() < 0.2F + (float) i * 0.03F) {
                 fireExtinguished(world, blockposition); // CraftBukkit - extinguished by rain
             } else {
                 int j = Math.min(15, i + random.nextInt(3) / 2);
 
-                if (i != j) {
+                if (!ca.spottedleaf.concrete.config.ConcreteConfig.buffFire && i != j) { /* Concrete - buff fire */
                     iblockdata = (IBlockData) iblockdata.set(BlockFire.AGE, j);
                     world.setTypeAndData(blockposition, iblockdata, 4);
                 }
@@ -175,7 +175,7 @@ public class BlockFire extends Block {
                                     }
 
                                     if (i2 > 0 && random.nextInt(k1) <= i2 && (!world.isRaining() || !this.a(world, (BlockPosition) blockposition_mutableblockposition))) {
-                                        int j2 = Math.min(15, i + random.nextInt(5) / 4);
+                                        int j2 = ca.spottedleaf.concrete.config.ConcreteConfig.buffFire ? 0 : Math.min(15, i + random.nextInt(5) / 4); /* Concrete - buff fire */
 
                                         // CraftBukkit start - Call to stop spread of fire
                                         if (world.getType(blockposition_mutableblockposition).getBlock() != Blocks.FIRE) {
@@ -234,7 +234,7 @@ public class BlockFire extends Block {
             // CraftBukkit end
 
             if (random.nextInt(j + 10) < 5 && !world.isRainingAt(blockposition)) {
-                int l = Math.min(j + random.nextInt(5) / 4, 15);
+                int l = ca.spottedleaf.concrete.config.ConcreteConfig.buffFire ? 0 : Math.min(j + random.nextInt(5) / 4, 15); /* Concrete - buff fire */
 
                 world.setTypeAndData(blockposition, (IBlockData) this.a((IBlockAccess) world, blockposition).set(BlockFire.AGE, l), 3);
             } else {
@@ -459,6 +459,20 @@ public class BlockFire extends Block {
         blockfire.a(Blocks.SWEET_BERRY_BUSH, 60, 100);
     }
 
+    /* Concrete start - buff fire */
+    public static void configinit() {
+        BlockFire blockfire = (BlockFire)Blocks.FIRE;
+        if (ca.spottedleaf.concrete.config.ConcreteConfig.unstoppablefire) {
+            for (final Block block : (Iterable<Block>) IRegistry.BLOCK) {
+                if (block == Blocks.FIRE || block == Blocks.AIR || block == Blocks.VOID_AIR || block == Blocks.CAVE_AIR) {
+                    continue;
+                }
+                blockfire.a(block, 100, 100);
+            }
+        }
+    }
+    /* Concrete end - buff fire */
+
     // CraftBukkit start
     private void fireExtinguished(GeneratorAccess world, BlockPosition position) {
         if (!CraftEventFactory.callBlockFadeEvent(world, position, Blocks.AIR.getBlockData()).isCancelled()) {
-- 
2.22.0

