From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Mon, 9 Sep 2019 23:16:43 -0700
Subject: [PATCH] fixup! Timings v2


diff --git a/src/main/java/co/aikar/timings/WorldTimingsHandler.java b/src/main/java/co/aikar/timings/WorldTimingsHandler.java
index e75c1eab2668ae6b13bedf02397deea749951d62..83ad4894ff7f77912451eff746f1782d07e3aa8b 100644
--- a/src/main/java/co/aikar/timings/WorldTimingsHandler.java
+++ b/src/main/java/co/aikar/timings/WorldTimingsHandler.java
@@ -77,6 +77,10 @@ public class WorldTimingsHandler {
 
     public final Timing playerMobDistanceMapUpdate;
 
+    public final Timing miscMobSpawning;
+    public final Timing chunkRangeCheckBig;
+    public final Timing chunkRangeCheckSmall;
+
     public WorldTimingsHandler(World server) {
         String name = server.worldData.getName() +" - ";
 
@@ -150,6 +154,10 @@ public class WorldTimingsHandler {
         chunkUnloadDataSave = Timings.ofSafe(name + "Chunk unload - Data Serialization");
 
         playerMobDistanceMapUpdate = Timings.ofSafe(name + "Per Player Mob Spawning - Distance Map Update");
+
+        miscMobSpawning = Timings.ofSafe(name + "Mob spawning - Misc");
+        chunkRangeCheckBig = Timings.ofSafe(name + "Chunk Tick Range - Big");
+        chunkRangeCheckSmall = Timings.ofSafe(name + "Chunk Tick Range - Small");
     }
 
     public static Timing getTickList(WorldServer worldserver, String timingsType) {
diff --git a/src/main/java/net/minecraft/server/ChunkProviderServer.java b/src/main/java/net/minecraft/server/ChunkProviderServer.java
index afc7c9243f055b3bdb70f7c194c2e426d03d1b7a..03d058e1fe280ddfd3b89a3a38a615b135e9c973 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderServer.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderServer.java
@@ -589,9 +589,21 @@ public class ChunkProviderServer extends IChunkProvider {
                     this.world.getMethodProfiler().exit();
                     ChunkCoordIntPair chunkcoordintpair = playerchunk.i();
 
-                    if (!this.playerChunkMap.isOutsideOfRange(chunkcoordintpair)) {
+                    // Paper start - timings
+                    this.world.timings.chunkRangeCheckBig.startTiming();
+                    // note: this is just a copy of the expression in the if
+                    boolean bigRadiusOutsideRange = !this.playerChunkMap.isOutsideOfRange(chunkcoordintpair);
+                    this.world.timings.chunkRangeCheckBig.stopTiming();
+                    if (bigRadiusOutsideRange) {
+                        // Paper end
                         chunk.b(chunk.q() + j);
-                        if (flag1 && (this.allowMonsters || this.allowAnimals) && this.world.getWorldBorder().isInBounds(chunk.getPos()) && !this.playerChunkMap.isOutsideOfRange(chunkcoordintpair, true)) { // Spigot
+                        // Paper start - timings
+                        this.world.timings.chunkRangeCheckSmall.startTiming();
+                        // note: this is just a copy of the expression in the if
+                        boolean smallRadiusOutsideRange = flag1 && (this.allowMonsters || this.allowAnimals) && this.world.getWorldBorder().isInBounds(chunk.getPos()) && !this.playerChunkMap.isOutsideOfRange(chunkcoordintpair, true);
+                        this.world.timings.chunkRangeCheckSmall.stopTiming();
+                        if (smallRadiusOutsideRange) { // Spigot
+                            // Paper end
                             this.world.getMethodProfiler().enter("spawner");
                             this.world.timings.mobSpawn.startTiming(); // Spigot
                             EnumCreatureType[] aenumcreaturetype1 = aenumcreaturetype;
@@ -667,7 +679,9 @@ public class ChunkProviderServer extends IChunkProvider {
             this.chunksCopy.clear(); /* Concrete - replace chunk map */
             this.world.getMethodProfiler().enter("customSpawners");
             if (flag1) {
+                try (co.aikar.timings.Timing ignored = this.world.timings.miscMobSpawning.startTiming()) { // Paper - timings
                 this.chunkGenerator.doMobSpawning(this.world, this.allowMonsters, this.allowAnimals);
+                } // Paper - timings
             }
 
             this.world.getMethodProfiler().exit();
