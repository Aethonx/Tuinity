From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Wed, 3 Jun 2020 11:49:45 -0700
Subject: [PATCH] Optimise biome conversion

Avoids the string conversions + map lookup

diff --git a/src/main/java/net/minecraft/server/BiomeBase.java b/src/main/java/net/minecraft/server/BiomeBase.java
index 0854ac9ef586b378420d9899f3afd2755e6f9f33..0ca9df30fab6073570bad5d2c369d64d7c58c120 100644
--- a/src/main/java/net/minecraft/server/BiomeBase.java
+++ b/src/main/java/net/minecraft/server/BiomeBase.java
@@ -74,6 +74,18 @@ public final class BiomeBase {
     private final BiomeFog p;
     private final ThreadLocal<Long2FloatLinkedOpenHashMap> q;
 
+    // Tuinity start - optimise biome conversion
+    private org.bukkit.block.Biome bukkitBiome;
+
+    public final org.bukkit.block.Biome getBukkitBiome() {
+        if (this.bukkitBiome == null) {
+            this.bukkitBiome = org.bukkit.block.Biome.valueOf(RegistryGeneration.WORLDGEN_BIOME.getKey(this).getKey().toUpperCase(java.util.Locale.ENGLISH));
+        }
+
+        return this.bukkitBiome;
+    }
+    // Tuinity end - optimise biome conversion
+
     private BiomeBase(BiomeBase.d biomebase_d, BiomeBase.Geography biomebase_geography, float f, float f1, BiomeFog biomefog, BiomeSettingsGeneration biomesettingsgeneration, BiomeSettingsMobs biomesettingsmobs) {
         this.g = (Map) IRegistry.STRUCTURE_FEATURE.g().collect(Collectors.groupingBy((structuregenerator) -> {
             return structuregenerator.f().ordinal();
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
index 674fa55b4065bdb0d688996f324c0508d80970c5..501ecfd0fddb4e6bf990b0548673f9dc108a66d2 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
@@ -507,15 +507,30 @@ public class CraftBlock implements Block {
             return null;
         }
 
-        return Biome.valueOf(RegistryGeneration.WORLDGEN_BIOME.getKey(base).getKey().toUpperCase(java.util.Locale.ENGLISH));
+        return base.getBukkitBiome(); // Tuinity - optimise biome conversion
     }
 
+    private static final java.util.EnumMap<Biome, BiomeBase> BUKKIT_BIOME_TO_NMS_CACHE = new java.util.EnumMap<>(Biome.class); // Tuinity - optimise biome conversion
+
     public static BiomeBase biomeToBiomeBase(Biome bio) {
         if (bio == null) {
             return null;
         }
 
-        return RegistryGeneration.WORLDGEN_BIOME.get(new MinecraftKey(bio.name().toLowerCase(java.util.Locale.ENGLISH)));
+        // Tuinity start - optimise biome conversion
+        BiomeBase cached = BUKKIT_BIOME_TO_NMS_CACHE.get(bio);
+
+        if (cached != null) {
+            return cached;
+        }
+
+        BiomeBase ret = RegistryGeneration.WORLDGEN_BIOME.get(new MinecraftKey(bio.name().toLowerCase(java.util.Locale.ENGLISH)));
+        synchronized (BUKKIT_BIOME_TO_NMS_CACHE) {
+            BUKKIT_BIOME_TO_NMS_CACHE.put(bio, ret);
+        }
+
+        return ret;
+        // Tuinity end - optimise biome conversion
     }
 
     @Override
